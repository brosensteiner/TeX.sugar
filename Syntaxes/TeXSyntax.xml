<?xml version="1.0" encoding="UTF-8"?>
<syntax name="language-root.tex">

    <zones>
    	<!--special syntax highlighting:-->
    	<include collection="Escapecharacter" />
    	<include collection="TeXDefine" />
    	<include collection="If_Else" />
    	<include collection="Unit" />
    	<include collection="SpecialKeywordsTeX" />
    	<include collection="Comment" />
    	<include collection="Group" />
    	<include collection="TeXBalancedBraces" />
       	
    	<zone name="tex.command.function.Registers.special-Registers">
    	    <expression>\\(advance|divide|multiply)(\b|(?=\d))</expression>
    	</zone>
    	<!--box and rule commands are made as "common practice" general as possible (users can define its own ...) to make highlighting of "special" commands possible like "hight", "width" and so on-->
    	<zone name="tex.command.function.Box.special-box">
    	    <expression>\\\w*box(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Box.special-rule">
    		<expression>\\\w*rule(\b|(?=\d))</expression>
    	</zone>
    	
       	<!--normal tex.command.function.-->
    	<zone name="tex.command.function.Inserts">
    	    <expression>\\(holdinginserts|insert|insertpenalties|splitbotmark|splitfirstmark|splitmaxdepth|splittopskip|vsplit)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Box">
    	    <expression>\\(badness|box|boxmaxdepth|cleaders|copy|dp|hbadness|hfuzz|ht|leaders|prevdepth|unhcopy|unvcopy|vbadness|vcenter|vfuzz|vtop|wd|xleaders)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Fonts">
    	    <expression>\\(/|fam|font|fontdimen|fontname|nullfont|scriptfont|scriptscriptfont|textfont)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Math">
    	    <expression>\\(above|abovewithdelims|atop|atopwithdelims|delimiterfactor|delimitershortfall|displaylimits|displaystyle|eqno|everydisplay|everymath|left|leqno|limits|mathbin|mathchoice|mathclose|mathinner|mathop|mathopen|mathord|mathpunct|mathrel|nolimits|nonscript|over|overline|overwithdelims|radical|right|scriptscriptstyle|scriptstyle|textstyle|underline)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Job">
    	    <expression>\\(day|deadcycles|dump|end|everyjob|jobname|mag|maxdeadcycles|month|time|year)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Tables">
    	    <expression>\\(cr|crcr|everycr|halign|noalign|omit|span|tabskip|valign)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Debugging">
    	    <expression>\\(batchmode|errhelp|errmessage|errortex.ines|errorstopmode|meaning|message|nonstopmode|pausing|scrollmode|show|showbox|showboxbreadth|showboxdepth|showlists|showthe|tracingcommands|tracinglostchars|tracingmacros|tracingonline|tracingoutput|tracingpages|tracingparagraphs|tracingrestores|tracingstats)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Page">
    	    <expression>\\(hoffset|maxdepth|pagedepth|pagefilllstretch|pagefillstretch|pagefilstretch|pagegoal|pageshrink|pagestretch|pagetotal|topskip|voffset|vsize)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Paragraph">
    	    <expression>\\(adjdemerits|baselineskip|displayindent|displaywidth|doublehyphendemerits|emergencystretch|everypar|finalhyphendemerits|hangafter|hangindent|hsize|ignorespaces|indent|leftskip|lineskip|lineskiplimit|looseness|noboundary|noindent|par|parfillskip|parindent|parshape|parskip|predisplaysize|pretolerance|prevgraf|rightskip|spacefactor|spaceskip|tolerance|vadjust|xspaceskip)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Hyphenation">
    	    <expression>\\((?&lt;!-)-(?!-)|defaulthyphenchar|discretionary|hyphenation|hyphenchar|language|lefthyphenmin|patterns|righthyphenmin|setlanguage|uchyph)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Kern">
    	    <expression>\\(lastkern|lower|mathsurround|mkern|moveleft|moveright|nulldelimiterspace|raise|scriptspace|unkern|kern)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Macro">
    	    <expression>\\(afterassignment|aftergroup|begingroup|csname|endcsname|endgroup|expandafter|global|globaldefs|long|noexpand|outer|relax|the|def|xdef|gdef|edef)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Character">
    	    <expression>\\(\\|accent|catcode|char|chardef|defaultskewchar|delcode|delimiter|endlinechar|escapechar|lccode|lowercase|mathaccent|mathchar|mathchardef|mathcode|newlinechar|number|romannumeral|sfcode|skewchar|string|uccode|uppercase)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Glue">
    	    <expression>\\(abovedisplayshortskip|abovedisplayskip|belowdisplayshortskip|belowdisplayskip|hfil|hfill|hfilneg|hskip|hss|lastskip|medmuskip|mskip|thickmuskip|thinmuskip|unskip|vfil|vfill|vfilneg|vskip|vss)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Penalties">
    	    <expression>\\(binoppenalty|displaywidowpenalty|postdisplaypenalty|predisplaypenalty|relpenalty|widowpenalty|brokenpenalty|clubpenalty|exhyphenpenalty|floatingpenalty|hyphenpenalty|interlinepenalty|linepenalty|lastpenalty|outputpenalty|penalty|unpenalty)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Logic">
    	    <expression>\\(else|fi|if|ifcase|ifcat|ifdim|ifeof|iffalse|ifhbox|ifhmode|ifinner|ifmmode|ifnum|ifodd|iftrue|ifvbox|ifvmode|ifvoid|ifx|or)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Marks">
    	    <expression>\\(botmark|firstmark|mark|topmark)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.FileIO">
    	    <expression>\\(closein|closeout|endinput|immediate|input|inputlineno|openin|openout|output|read|shipout|special|write)(\b|(?=\d))</expression>
    	</zone>

    </zones>
    
    <library>
    
    	<collection name="Escapecharacter">
    	    <zone name="context.literal.escape.character">
    	        <expression>\\[^0-9a-zA-Z@?!\[\]\(\)]|\\\$</expression>
    	    </zone>
    	</collection>
    
    	<collection name="TeXDefine">
    		
    		<zone name="tex.command.function.define">
    			<expression>(\\(?:g|e|x|count|dimen|muskip|skip|toks)?def)\s*(\\[^\s\{\}\[\]#\\=]*[^\s\{\}\[\]#\\])</expression>
    			<capture number="1" name="tex.command.function.general.def"/>
    			<capture number="2" name="tex.command.function.name"/>
    		</zone>
    		
    		<zone name="tex.command.function.let">
    		    <expression>\\(?:future)?let\b\s*(\\[^\s\{\}#\\=]*[^\s\{\}#\\])?</expression>
    		    <capture number="1" name="tex.command.function.name"/>
    		</zone>
    		
    		<zone name="tex.support.variable.define">
    		    <expression>\#{1,9}[1-9]</expression>
    		</zone>
    	
    	</collection>
    	
    	<collection name="If_Else">
    		<!--\if* will catch the next command -> maybe there are some environment zones in other sugars defined and this would break them, because of TeX complex syntax-->
    		<zone name="tex.keyword.control-zone">
    		    <expression>(\\if[A-Za-z@!?:_]*)(\\[[:alpha:]_@!?:]*[[:alpha:]_@!?:])?(\b|(?=\d))</expression>
    		    <capture number="1" name="tex.keyword.control.if"/>
    		    <capture number="2" name="tex.support.function.general"/>
    		</zone>
    		
    		<zone name="tex.keyword.control.else">
    		    <expression>\\else(\b|(?=\d))</expression>
    		</zone>
    		
    		<zone name="tex.keyword.control.or">
    		    <expression>\\or(\b|(?=\d))</expression>
    		</zone>
    		
    	    <zone name="tex.keyword.control.fi">
    	        <expression>\\fi(\b|(?=\d))</expression>
    	    </zone>
    	    
    	</collection>
    	
    	<collection name="SpecialKeywordsTeX">
    		<!--these commands should be as general as possible, but on the other side as restrictive as possible for better .css highlighting:-->
    		<zone name="tex.keyword-zone.to-spread-keyword">
    		    <expression>(to|spread)\s*(?:((?:\+|\-)?[0-9]*(\.)?[0-9]+)\s*(fi(?:lll|ll|l)|(?:\s*(true)?\s*(mu|cm|mm|in|pt|bp|em|ex|pc|sp|cc|dd)?))|(?:\b|(?&lt;=\d)))</expression>
    		    <capture number="1" name="tex.keyword-zone.to-spread-keyword"/>
    		    <capture number="2" name="tex.numeric"/>
    		    <capture number="3" name="tex.punctuation.delimiter.point"/>
    		    <capture number="4" name="tex.keyword-zone.other.fillls"/>
    		    <capture number="5" name="tex.keyword-zone.other.true"/>
    		    <capture number="6" name="tex.keyword.unit"/>
    		    <capture number="7" name="tex.command.function.general"/>
    		</zone>
    		
    		<zone name="tex.keyword-zone.skip-keyword">
    		    <expression>(\\[A-Za-z_@!?:]*(?&lt;!un)(?:skip|size)[A-Za-z_@!?:]*)\s*(?:((?:\+|\-)?[0-9]*(\.)?[0-9]+)\s*(fi(?:lll|ll|l)|(?:\s*(true)?\s*(mu|cm|mm|in|pt|bp|em|ex|pc|sp|cc|dd)))|(?:\b|(?&lt;=\d)))</expression>
    		    <capture number="1" name="tex.command.function.general"/>
    		    <capture number="2" name="tex.numeric"/>
    		    <capture number="3" name="tex.punctuation.delimiter.point"/>
    		    <capture number="4" name="tex.keyword.other.fillls"/>
    		    <capture number="5" name="tex.keyword.other.true"/>
    		    <capture number="6" name="tex.keyword.unit"/>
    		    <capture number="7" name="tex.command.function.general"/>
    		</zone>
    		
    		<zone name="tex.keyword-zone.plus-minus-keyword">
    		    <expression>(\b|(?&lt;=\d))(minus|plus)(\b|(?=\d))</expression>
    		</zone>
    		
    		<!--"(?:\s*(?!=)", because could interfere with ConTeXt keys "width" and "height"-->
    		<zone name="tex.keyword-zone.depth-width-height-keyword">
    			<expression>(?:\b|(?&lt;=\d))(?:depth|width|height)(?:\s*(?:((?:\+|\-)?[0-9]*(\.)?[0-9]+)\s*(fi(?:lll|ll|l)|(?:\s*(true)?\s*(mu|cm|mm|in|pt|bp|em|ex|pc|sp|cc|dd)))|(?:(?!\s*=)|(?&lt;=\d))))</expression>
    			<capture number="1" name="tex.numeric"/>
    			<capture number="2" name="tex.punctuation.delimiter.point"/>
    			<capture number="3" name="tex.keyword.other.fillls"/>
    			<capture number="4" name="tex.keyword.other.true"/>
    			<capture number="5" name="tex.keyword.unit"/>
    			<capture number="6" name="tex.command.function.general"/>
    		</zone>
    		
    		<zone name="tex.keyword-zone.by-keyword">
    		    <expression>(\b|(?&lt;=\d))by(\b|(?=\d))</expression>
    		</zone>
    		
    	</collection>
    	
    	<collection name="Comment">
    	    
    	    <zone name="tex.comment-line-empty"><!--don´t want comments with no information in the navigator-->
    	        <expression>(%(?:\s|%)*)$</expression>
    	        <capture number="1" name="punctuation.comment.begin"/>
    	    </zone>    
    	    <zone name="tex.comment.line">
    	        <expression>(%)(?:\s*(.+)$)|(%)(?:\s*$)</expression>
    	        <capture number="1" name="punctuation.comment.begin"/>   
    	    </zone>
    	    
    	</collection>
    	        
    	<collection name="Group">
    	    <zone name="tex.command.begingroup.begin.level0">
    	        <expression>(\\(begin|b)group)(\b|(?=\d))</expression>
    	    </zone>
    	    <zone name="tex.command.endgroup.end.level0">
    	        <expression>(\\(end|e)group)(\b|(?=\d))</expression>
    	    </zone>
    	</collection>
    	
    	<collection name="Unit">
    	
    		<zone name="tex.keyword-zone.unit">
    		    <expression>((?:\+|\-)?[0-9]*(\.)?[0-9]+)\s*(true)?\s*(mu|cm|mm|in|pt|bp|em|ex|pc|sp|cc|dd)</expression>
    		    <capture number="1" name="tex.numeric"/>
    		    <capture number="2" name="tex.punctuation.delimiter.point"/>
    		    <capture number="3" name="tex.keyword.other.true"/>
    		    <capture number="4" name="tex.keyword.unit"/>
    		</zone>
    		
    		<zone name="tex.numeric">
    			<expression>((?:\+|\-)?[0-9]*(\.)?[0-9]+)</expression>
    		</zone>
    	
    	</collection>
    
    </library>
    
</syntax>