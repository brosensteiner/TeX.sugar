<?xml version="1.0" encoding="UTF-8"?>
<syntax name="language-root.tex">

    <zones>
    	<!--special syntax highlighting:-->
    	<include collection="TeXDefine" />
    	<include collection="If_Else" />
    	<include collection="Unit" />
    	<include collection="Numeric" />
    	<include collection="SpecialKeywordsTeX" />
    	<include collection="TeXKeywords" />
    	<include collection="Escapecharacter" />
    	<include collection="Comment" />
    	<include collection="Group" />
    	<include collection="TeXBalancedBraces" />
    	
       	<!--normal tex.command.function.-->
    	<zone name="tex.command.function.Inserts">
    	    <expression>\\(holdinginserts|(?:insert)?penalties|split(?:(?:bot|first)mark|maxdepth|topskip)|vsplit)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Box">
    	    <expression>\\(b(?:ox(?:maxdepth)?|adness)|dp|h(?:fuzz|t|badness)|prevdepth|(?:un(?:v|h))?copy|v(center|fuzz|top|badness)|wd|(?:x|c)?leaders)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Fonts">
    	    <expression>\\(f(?:am|ont(?:dimen|name)?)|(?:null|script(?:script)?|text)font)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Math">
    	    <expression>\\(a(?:(?:bove|top)(?:withdelims)?)|d(?:elimiter(?:factor|shortfall)|isplay(?:limits|style))|e(?:qno|very(?:display|math))|l(?:eft|eqno|imits)|math(?:bin|c(?:hoice|lose)|inner|o(?:p(?:en)?|rd)|punct|rel)|no(?:limits|nscript)|over(?:line|withdelims)?|r(?:adical|ight)|script(?:script)?style|textstyle|underline)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Job">
    	    <expression>\\(d(?:ay|eadcycles|ump)|e(?:nd|veryjob)|jobname|m(?:a(?:g|xdeadcycles)|onth)|time|year)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Tables">
    	    <expression>\\(cr(?:cr)?|everycr|(?:h|v|no)align|omit|span|tabskip)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Debugging">
    	    <expression>\\(batchmode|err(?:help|message)|error(?:contextlines|stopmode)|me(?:aning|ssage)|(?:nonstop|scroll)mode|pausing|show(?:box(?:breadth|depth)?|lists|the)?|tracing(?:commands|lostchars|macros|o(?:nline|utput)|pa(?:ges|ragraphs)|restores|stats))(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Page">
    	    <expression>\\((?:h|v)offset|maxdepth|page(?:depth|fil{1,3}stretch|goal|s(?:hrink|tretch)|to(?:tal|pskip))|vsize)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Paragraph">
    	    <expression>\\((?:adj|(?:final|double)hyphen)demerits|(?:(?:baselin|x?spac)e|(?:righ|lef)t)skip|display(?:indent|width)|e(?:mergencystretch|verypar)|h(?:ang(?:after|indent)|size)|i(?:gnorespaces|ndent)|l(?:ine(?:skip(?:limit)?)|ooseness)|no(?:boundary|indent)|p(?:ar(?:fillskip|indent|s(?:hape|kip))?|re(?:(?:displaysiz|toleranc)e|vgraf))|tolerance|spacefactor|vadjust)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Hyphenation">
    	    <expression>\\((?&lt;!-)-(?!-)|hyphen(?:char|ation)|d(?:efaulthyphenchar|iscretionary)|language|(?:left|right)hyphenmin|patterns|setlanguage|uchyph)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Kern">
    	    <expression>\\((?:last|un|m)?kern|lower|m(?:athsurround|ove(?:left|right))|nulldelimiterspace|raise|scriptspace)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Macro">
    	    <expression>\\(after(?:assignment|group)|begingroup|e(?:nd(?:csname|group)|xpandafter)|(?:csnam|th)e|(?:global)?defs|long|noexpand|outer|relax|(?:x|g|e)?def)(\b|(?=\d))</expression>
    	</zone>
    	<!--\advance, \multiply, \devide are special (see special zone)-->
    	<zone name="tex.command.function.Registers">
    	    <expression>\\((?:count|dimen|skip|toks)(?:def)?)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Character">
    	    <expression>\\(accent|(?:cat|del|sf|(?:u|l)c)code|(?:char)?def|(?:(?:default)?skew|e(?:ndline|scape)|newline)char|delimiter|(?:low|upp)ercase|math(?:accent|(?:char)?def|code)|number|romannumeral|string)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Glue">
    	    <expression>\\((?:above|below)display(?:short)?skip|(?:(?:h|v)(?:fi(?:l{1,2}|lneg)|s(?:kip|s)))|(?:last|m(?:edmu)?|(?:thi(?:ck|n))?mu|un)skip)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Penalties">
    	    <expression>\\((?:b(?:inop|roken)|(?:display)?widow|p(?:(?:ost|re)display)|rel|club|ex(?:hyphen)?|floating|inter(?:line)?|last|output|un|hyphen|line)?penalty)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.keyword.control.Logic">
    	    <expression>\\(if(?:ca(?:se|t)|dim|eof|false|h(?:box|mode)|inner|mmode|num|odd|true|v(?:box|mode|oid)|x)?|else|fi|or)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.Marks">
    	    <expression>\\((?:bot|first|top)?mark)(\b|(?=\d))</expression>
    	</zone>
    	
    	<zone name="tex.command.function.FileIO">
    	    <expression>\\(close(?:in|out)|endinput|immediate|(?:input)?lineno|open(?:in|out)|output|read|s(?:hipout|pecial)|write)(\b|(?=\d))</expression>
    	</zone>

    </zones>
    
    <library>
    	<!--TODO: find the right/all escape chars-->
    	<collection name="Escapecharacter">
    	    <zone name="tex.escape.character">
    	        <expression>\\([^[:alnum:]@?!\[\]\(\)´°‘*+^=]|\$)</expression>
    	    </zone>
    	</collection>
    
    	<!--the "tex.command.function.name" zone is actually what ConTeXt MKIV allows in \def´s - plain.tex file looks good with these, so it can´t be that wrong :)-->
    	<collection name="TeXDefine">
    		
    		<zone name="tex.command.function.define">
    			<expression>(\\(?:g|e|x|count|dimen|(?:mu)?skip|toks)?def)\s*((?:\\|\^\^)(\{|\}|#)?[^\s\{\}#%]*)</expression>
    			<capture number="1" name="tex.command.function.general.def"/>
    			<capture number="2" name="tex.command.function.name"/>
    		</zone>
    		
    		<zone name="tex.command.function.Registers">
    		    <expression>\\((?:count|dimen|skip|toks)(?:def))([^\s]+)\s*(=(?!=))</expression>
    		    <capture number="1" name="tex.command.function.general.def"/>
    		    <capture number="2" name="tex.command.function.name"/>
    		    <capture number="3" name="punctuation.operator.assignment"/>
    		</zone>
    		
    		<zone name="tex.command.function.Character">
    		    <expression>\\((?:mathchar|char)def)([^\s]+)\s*(=(?!=))</expression>
    		    <capture number="1" name="tex.command.function.general.chardef"/>
    		    <capture number="2" name="tex.command.function.name"/>
    		    <capture number="3" name="punctuation.operator.assignment"/>
    		</zone>
    		<!--exceptions: \[, make problesm in ConTeXt (key=value pairs in \lettrine command), but think are not allowed in real TeX anyway-->
    		<zone name="tex.command.function.let">
    		    <expression>(\\(?:future)?let)([^\s\[]+)\s*(=(?!=))</expression>
    		    <capture number="1" name="tex.command.function.general.let"/>
    		    <capture number="2" name="tex.command.function.name"/>
    		    <capture number="3" name="punctuation.operator.assignment"/>
    		</zone>
    		
    		<zone name="tex.command.function.let">
    		    <expression>(\\(?:future)?let)\s*((?:\\|^^)[[:alpha:]^_]+)</expression>
    		    <capture number="1" name="tex.command.function.general.let"/>
    		    <capture number="2" name="tex.command.function.name"/>
    		</zone>
    		
    		<zone name="tex.command.function.code">
    		    <expression>(\\(?:cat|math|del|sf|(?:l|u)c)code)(`)(?:([^\s]+)\s*(=(?!=)))?</expression>
    		    <capture number="1" name="tex.command.function.general.let"/>
    		    <capture number="2" name="operator.punctuation.delimiter.backtick"/>
    		    <capture number="3" name="tex.command.function.name"/>
    		    <capture number="4" name="punctuation.operator.assignment"/>
    		</zone>
    		
    		<zone name="tex.support.variable.define">
    		    <expression>#{1,9}[1-9]</expression>
    		</zone>
    	
    	</collection>
    	
    	<collection name="If_Else">
    		<zone name="tex.keyword.control-zone">
    		    <expression>(\\if(?:[A-Za-z_@!?:]*)?)</expression>
    		    <capture number="1" name="tex.keyword.control.if"/>
    		</zone>
    		
    		<zone name="tex.keyword.control.else">
    		    <expression>\\else(\b|(?=\d))</expression>
    		</zone>
    		
    		<zone name="tex.keyword.control.or">
    		    <expression>\\or(\b|(?=\d))</expression>
    		</zone>
    		
    	    <zone name="tex.keyword.control.fi">
    	        <expression>\\fi(\b|(?=\d))</expression>
    	    </zone>
    	    
    	</collection>
    	
    	<collection name="SpecialKeywordsTeX">
    		<!--these commands should be as general as possible, but on the other side as restrictive as possible for better syntax highlighting. Anyway, it is always a trade-off-->
    		<zone name="tex.command.function.Registers.special-Registers">
    		    <expression>\\((?:advanc|divid)e|multiply)(\b|(?=\d))</expression>
    		</zone>
    		
    		<zone name="tex.command.function.Box.special-box">
    		    <expression>\\(?!if)(?:[a-zA-Z_]*box|halign)(\b|(?=\d))</expression>
    		</zone>
    		
    		<zone name="tex.command.function.Box.special-rule">
    			<expression>\\(?!if)[a-zA-Z_]*rule(\b|(?=\d))</expression>
    		</zone>
    		
    		<zone name="tex.keyword-zone.to-spread-keyword">
    		    <expression>(?:to|spread)\s*(?:((?:\+|-)?\d*(\.)?\d+)\s*(?:(fil{1,3})|(?:\s*(true)?\s*(m(?:u|m)|c(?:m|c)|in|p(?:t|c)|(?:b|s)p|e(?:m|x)|dd)))(\b|(?=\d)))?</expression>
    		    <capture number="1" name="tex.numeric"/>
    		    <capture number="2" name="tex.punctuation.delimiter.point"/>
    		    <capture number="3" name="tex.keyword-zone.other.fillls"/>
    		    <capture number="4" name="tex.keyword-zone.other.true"/>
    		    <capture number="5" name="tex.keyword.unit"/>
    		</zone>

    		<zone name="tex.keyword-zone.skip-keyword">
    		    <expression>(\\[a-zA-Z_@!?:]*(?&lt;!un)(?:s(?:kip|ize)))\s*(?:((?:\+|-)?\d*(\.)?\d+)\s*(?:(fil{1,3})|(?:\s*(true)?\s*(m(?:u|m)|c(?:m|c)|in|p(?:t|c)|(?:b|s)p|e(?:m|x)|dd))))?(\b|(?=\d))</expression>
    		    <capture number="1" name="tex.command.function.general"/>
    		    <capture number="2" name="tex.numeric"/>
    		    <capture number="3" name="tex.punctuation.delimiter.point"/>
    		    <capture number="4" name="tex.keyword.other.fillls"/>
    		    <capture number="5" name="tex.keyword.other.true"/>
    		    <capture number="6" name="tex.keyword.unit"/>
    		</zone>
    		
    		<zone name="tex.keyword-zone.plus-minus-keyword">
    		    <expression>(\b|(?&lt;=\d))((?:min|pl)us)(\b|(?=\d))</expression>
    		</zone>
    		
    		<!--"(?:\s*(?!=)", because could interfere with ConTeXt keys "width" and "height"-->
    		<zone name="tex.keyword-zone.depth-width-height-keyword">
    			<expression>(?:\b|(?&lt;=\d))(?:(?:dep|wid)th|height)\s*(?:((?:\+|-)?\d*(\.)?\d+)\s*(?:(fil{1,3})|(?:\s*(true)?\s*(m(?:u|m)|c(?:m|c)|in|p(?:t|c)|(?:b|s)p|e(?:m|x)|dd)))(\b|(?=\d)))?</expression>
    			<capture number="1" name="tex.numeric"/>
    			<capture number="2" name="tex.punctuation.delimiter.point"/>
    			<capture number="3" name="tex.keyword.other.fillls"/>
    			<capture number="4" name="tex.keyword.other.true"/>
    			<capture number="5" name="tex.keyword.unit"/>
    			<capture number="6" name="tex.command.function.general"/>
    		</zone>
    		
    		<zone name="tex.keyword-zone.by-keyword">
    		    <expression>(\b|(?&lt;=\d))by(\b|(?=\d))</expression>
    		</zone>
    		
    	</collection>
    	
    	<collection name="Comment">
    	    
    	    <zone name="tex.comment-line-empty"><!--don´t want comments with no information in the navigator-->
    	        <expression>(%(?:\s|%)*)$</expression>
    	        <capture number="1" name="punctuation.comment.begin"/>
    	    </zone>    
    	    <zone name="tex.comment.line">
    	        <expression>(%)(?:\s*(.+)$)|(%)(?:\s*$)</expression>
    	        <capture number="1" name="punctuation.comment.begin"/>   
    	    </zone>
    	    
    	</collection>
    	        
    	<collection name="Group">
    	    <zone name="tex.command.begingroup.begin.level0">
    	        <expression>(\\b(?:egin)?group)(\b|(?=\d))</expression>
    	    </zone>
    	    <zone name="tex.command.endgroup.end.level0">
    	        <expression>(\\e(?:nd)?group)(\b|(?=\d))</expression>
    	    </zone>
    	</collection>
    	
    	<collection name="TeXKeywords">
    		
    		<zone name="tex.keyword.tab">
    			<expression>&amp;</expression>
    		</zone>
    		<zone name="tex.keyword.none-splitting-space">
    			<expression>~</expression>
    		</zone>
    		<zone name="tex.keyword.italic-correction">
    			<expression>\\/</expression>
    		</zone>
    		<zone name="tex.keyword.discretionary-hyphen">
    			<expression>\\-</expression>
    		</zone>
    		<zone name="tex.keyword.control-space">
    			<expression>\\ </expression>
    		</zone>
    		
    	</collection>
    	
    	<collection name="Numeric">
    		
    		<zone name="tex.keyword-zone.numeric.octal">
    		    <expression>(')((?:\+|-)?[0-7]*(\.)?[0-7]+)</expression>
    		    <capture number="1" name="tex.punctuation.delimiter.singlequote"/>
    		    <capture number="2" name="tex.numeric.octal"/>
    		    <capture number="3" name="tex.punctuation.delimiter.point"/>
    		</zone>
    		
    		<zone name="tex.keyword-zone.numeric.hexadecimal">
    		    <expression>(")((?:\+|-)?[0-9A-F]*(\.)?[0-9A-F]+)</expression>
    		    <capture number="1" name="tex.punctuation.delimiter.doublequote"/>
    		    <capture number="2" name="tex.numeric.hexadecimal"/>
    		    <capture number="3" name="tex.punctuation.delimiter.point"/>
    		</zone>
    		
    		<zone name="tex.keyword-zone.numeric">
    		    <expression>((?:\+|-)?\d*(\.)?\d+)</expression>
    		    <capture number="1" name="tex.numeric"/>
    		    <capture number="2" name="tex.punctuation.delimiter.point"/>
    		</zone>
    	
    	</collection>
    	
    	<collection name="Unit">
    	
    		<zone name="tex.keyword-zone.unit">
    		    <expression>((?:\+|-)?\d*(\.)?\d+)\s*(?:(fil{1,3}\b)|(?:\s*(true)?\s*(m(?:u|m)|c(?:m|c)|in|p(?:t|c)|(?:b|s)p|e(?:m|x)|dd)))</expression>
    		    <capture number="1" name="tex.numeric"/>
    		    <capture number="2" name="tex.punctuation.delimiter.point"/>
    		    <capture number="3" name="tex.keyword.other.fillls"/>
    		    <capture number="4" name="tex.keyword.other.true"/>
    		    <capture number="5" name="tex.keyword.unit"/>
    		</zone>
    	
    	</collection>
    
    </library>
    
</syntax>